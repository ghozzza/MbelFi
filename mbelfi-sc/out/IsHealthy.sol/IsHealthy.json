{"abi":[{"type":"function","name":"_isHealthy","inputs":[{"name":"borrowToken","type":"address","internalType":"address"},{"name":"factory","type":"address","internalType":"address"},{"name":"addressPositions","type":"address","internalType":"address"},{"name":"ltv","type":"uint256","internalType":"uint256"},{"name":"totalBorrowAssets","type":"uint256","internalType":"uint256"},{"name":"totalBorrowShares","type":"uint256","internalType":"uint256"},{"name":"userBorrowShares","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"view"},{"type":"error","name":"InsufficientCollateral","inputs":[]}],"bytecode":{"object":"0x608080604052346015576104ee908161001a8239f35b5f80fdfe6080806040526004361015610012575f80fd5b5f3560e01c632e68f18e14610025575f80fd5b346102b45760e03660031901126102b4576004356001600160a01b038116908190036102b4576024356001600160a01b03811692908390036102b4576044356001600160a01b03811693908490036102b45781602481602093630ea199ad60e11b82528660048301525afa9081156102c0575f916103d2575b50604051633fabe5a360e21b81526001600160a01b03919091169160a082600481865afa9182156102c0575f92610380575b506020600492936040519384809263313ce56760e01b82525afa9081156102c0576004925f9261035e575b506020906040519384809263313ce56760e01b82525afa9182156102c0575f9261032d575b506040516330de110d60e11b81525f94602082600481845afa9182156102c0575f926102f9575b5060015b828111156102015750505061016f60a43561016a60843560c435610476565b610489565b92670de0b6b3a7640000810290808204670de0b6b3a764000014901517156101ed576101ba936101ae6101b4926101a86101a8956104a7565b90610489565b90610476565b916104a7565b670de0b6b3a76400006101cf60643584610476565b049181116101de57116101de57005b633a23d82560e01b5f5260045ffd5b634e487b7160e01b5f52601160045260245ffd5b604051631cb928a960e01b815260048101829052602081602481865afa9081156102c0575f916102cb575b506001600160a01b03168061024d575b505f1981146101ed5760010161014b565b6040979197519063289fbe8f60e11b82526004820152602081602481865afa9081156102c0575f9161028b575b5081018091116101ed57955f61023c565b90506020813d82116102b8575b816102a5602093836103f1565b810103126102b457515f61027a565b5f80fd5b3d9150610298565b6040513d5f823e3d90fd5b6102ec915060203d81116102f2575b6102e481836103f1565b810190610427565b5f61022c565b503d6102da565b9091506020813d602011610325575b81610315602093836103f1565b810103126102b45751905f610147565b3d9150610308565b61035091925060203d602011610357575b61034881836103f1565b81019061045d565b905f610120565b503d61033e565b602091925061037990823d84116103575761034881836103f1565b91906100fb565b915060a0823d60a0116103ca575b8161039b60a093836103f1565b810103126102b4576020826103b1600494610446565b506103c26080838301519201610446565b5092506100d0565b3d915061038e565b6103eb915060203d6020116102f2576102e481836103f1565b5f61009e565b90601f8019910116810190811067ffffffffffffffff82111761041357604052565b634e487b7160e01b5f52604160045260245ffd5b908160209103126102b457516001600160a01b03811681036102b45790565b519069ffffffffffffffffffff821682036102b457565b908160209103126102b4575160ff811681036102b45790565b818102929181159184041417156101ed57565b8115610493570490565b634e487b7160e01b5f52601260045260245ffd5b60ff16604d81116101ed57600a0a9056fea26469706673582212207e5d5c1ed1276526844765bcb118054c072d2d80c96bab3cf437fda05d73222264736f6c634300081c0033","sourceMap":"948:3515:57:-:0;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x6080806040526004361015610012575f80fd5b5f3560e01c632e68f18e14610025575f80fd5b346102b45760e03660031901126102b4576004356001600160a01b038116908190036102b4576024356001600160a01b03811692908390036102b4576044356001600160a01b03811693908490036102b45781602481602093630ea199ad60e11b82528660048301525afa9081156102c0575f916103d2575b50604051633fabe5a360e21b81526001600160a01b03919091169160a082600481865afa9182156102c0575f92610380575b506020600492936040519384809263313ce56760e01b82525afa9081156102c0576004925f9261035e575b506020906040519384809263313ce56760e01b82525afa9182156102c0575f9261032d575b506040516330de110d60e11b81525f94602082600481845afa9182156102c0575f926102f9575b5060015b828111156102015750505061016f60a43561016a60843560c435610476565b610489565b92670de0b6b3a7640000810290808204670de0b6b3a764000014901517156101ed576101ba936101ae6101b4926101a86101a8956104a7565b90610489565b90610476565b916104a7565b670de0b6b3a76400006101cf60643584610476565b049181116101de57116101de57005b633a23d82560e01b5f5260045ffd5b634e487b7160e01b5f52601160045260245ffd5b604051631cb928a960e01b815260048101829052602081602481865afa9081156102c0575f916102cb575b506001600160a01b03168061024d575b505f1981146101ed5760010161014b565b6040979197519063289fbe8f60e11b82526004820152602081602481865afa9081156102c0575f9161028b575b5081018091116101ed57955f61023c565b90506020813d82116102b8575b816102a5602093836103f1565b810103126102b457515f61027a565b5f80fd5b3d9150610298565b6040513d5f823e3d90fd5b6102ec915060203d81116102f2575b6102e481836103f1565b810190610427565b5f61022c565b503d6102da565b9091506020813d602011610325575b81610315602093836103f1565b810103126102b45751905f610147565b3d9150610308565b61035091925060203d602011610357575b61034881836103f1565b81019061045d565b905f610120565b503d61033e565b602091925061037990823d84116103575761034881836103f1565b91906100fb565b915060a0823d60a0116103ca575b8161039b60a093836103f1565b810103126102b4576020826103b1600494610446565b506103c26080838301519201610446565b5092506100d0565b3d915061038e565b6103eb915060203d6020116102f2576102e481836103f1565b5f61009e565b90601f8019910116810190811067ffffffffffffffff82111761041357604052565b634e487b7160e01b5f52604160045260245ffd5b908160209103126102b457516001600160a01b03811681036102b45790565b519069ffffffffffffffffffff821682036102b457565b908160209103126102b4575160ff811681036102b45790565b818102929181159184041417156101ed57565b8115610493570490565b634e487b7160e01b5f52601260045260245ffd5b60ff16604d81116101ed57600a0a9056fea26469706673582212207e5d5c1ed1276526844765bcb118054c072d2d80c96bab3cf437fda05d73222264736f6c634300081c0033","sourceMap":"948:3515:57:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;948:3515:57;;;;;;-1:-1:-1;;;;;948:3515:57;;;;;;;;;;-1:-1:-1;;;;;948:3515:57;;;;;;;;;;;-1:-1:-1;;;;;948:3515:57;;;;;;;;;;;;;;;;;2955:46;;;948:3515;2955:46;;948:3515;2955:46;;;;;;;948:3515;2955:46;;;948:3515;-1:-1:-1;948:3515:57;;-1:-1:-1;;;3094:51:57;;-1:-1:-1;;;;;948:3515:57;;;;;;;;;;3094:51;;;;;;;948:3515;3094:51;;;948:3515;;;;;;;;;;;;;;;3183:44;;;;;;;;;948:3515;3183:44;948:3515;3183:44;;;948:3515;;;;;;;;;;;;;3260:38;;;;;;;;;948:3515;3260:38;;;948:3515;-1:-1:-1;948:3515:57;;-1:-1:-1;;;3432:37:57;;948:3515;;;;;;;3432:37;;;;;;;948:3515;3432:37;;;948:3515;3484:13;948:3515;3499:12;;;;;;;948:3515;;;3841:58;948:3515;;3842:36;948:3515;;;;3842:36;:::i;:::-;3841:58;:::i;:::-;948:3515;4026:4;948:3515;;;;;;4026:4;948:3515;;;;;;;4090:57;4033:25;4003:55;4091:30;4033:25;;4126:20;4033:25;;:::i;:::-;4003:55;;:::i;:::-;4091:30;;:::i;:::-;4126:20;;:::i;4090:57::-;4026:4;4242:21;948:3515;;4242:21;;:::i;:::-;948:3515;4322:29;;;4318:66;;4398:23;4394:60;;948:3515;4394:60;4360:24;;;948:3515;4430:24;948:3515;;4430:24;948:3515;;;;;;;;;;;;3513:3;948:3515;;-1:-1:-1;;;3548:41:57;;948:3515;3548:41;;948:3515;;;;;;;3548:41;;;;;;;;948:3515;3548:41;;;3513:3;-1:-1:-1;;;;;;948:3515:57;;3603:122;;3513:3;-1:-1:-1;;;948:3515:57;;;;;;3484:13;;3603:122;948:3515;;;;;;;;;3665:45;;948:3515;3665:45;;948:3515;;3665:45;948:3515;3665:45;;;;;;;;;948:3515;3665:45;;;3603:122;948:3515;;;;;;;;3603:122;;;;3665:45;;;948:3515;3665:45;;;;;;;;;948:3515;3665:45;;;:::i;:::-;;;948:3515;;;;;3665:45;;;948:3515;;;;3665:45;;;-1:-1:-1;3665:45:57;;;948:3515;;;;;;;;;3548:41;;;;948:3515;3548:41;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;3432:37;;;;948:3515;3432:37;;948:3515;3432:37;;;;;;948:3515;3432:37;;;:::i;:::-;;;948:3515;;;;;3432:37;;;;;;;-1:-1:-1;3432:37:57;;3260:38;;;;;948:3515;3260:38;948:3515;3260:38;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;3183:44;948:3515;3183:44;;;;;;;;;;;;;;;:::i;:::-;;;;;3094:51;;;948:3515;3094:51;;948:3515;3094:51;;;;;;948:3515;3094:51;;;:::i;:::-;;;948:3515;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;3094:51;;;;;;;-1:-1:-1;3094:51:57;;2955:46;;;;948:3515;2955:46;948:3515;2955:46;;;;;;;:::i;:::-;;;;948:3515;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;948:3515:57;;;;;-1:-1:-1;948:3515:57;;;;;;;;;;;-1:-1:-1;;;;;948:3515:57;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o","linkReferences":{}},"methodIdentifiers":{"_isHealthy(address,address,address,uint256,uint256,uint256,uint256)":"2e68f18e"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InsufficientCollateral\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrowToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"addressPositions\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ltv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrowAssets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrowShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userBorrowShares\",\"type\":\"uint256\"}],\"name\":\"_isHealthy\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Mbelfi Protocol\",\"custom:security\":\"This contract is used for position validation and should be                  called before allowing additional borrows or liquidations\",\"details\":\"This contract checks if a user's position is healthy by comparing      the total collateral value against the borrowed amount and LTV ratio The health check ensures: - The borrowed value doesn't exceed the total collateral value - The borrowed value doesn't exceed the maximum allowed based on LTV ratio\",\"errors\":{\"InsufficientCollateral()\":[{\"details\":\"This error is thrown when either:      - The borrowed value exceeds the total collateral value      - The borrowed value exceeds the maximum allowed based on LTV ratio\"}]},\"kind\":\"dev\",\"methods\":{\"_isHealthy(address,address,address,uint256,uint256,uint256,uint256)\":{\"custom:revert\":\"InsufficientCollateral When the position is unhealthy\",\"custom:security\":\"This function should be called before any borrow operations                  to ensure the position remains healthy after the operation\",\"details\":\"This function performs a comprehensive health check by:      1. Fetching the current price of the borrowed token from Chainlink      2. Calculating the total collateral value from all user positions      3. Computing the actual borrowed amount in the borrowed token      4. Converting the borrowed amount to USD value      5. Comparing against collateral value and LTV limits\",\"params\":{\"addressPositions\":\"The address of the positions contract\",\"borrowToken\":\"The address of the token being borrowed\",\"factory\":\"The address of the lending pool factory contract\",\"ltv\":\"The loan-to-value ratio (in basis points, e.g., 8000 = 80%)\",\"totalBorrowAssets\":\"The total amount of assets borrowed across all users\",\"totalBorrowShares\":\"The total number of borrow shares across all users\",\"userBorrowShares\":\"The number of borrow shares owned by the user\"}}},\"title\":\"IsHealthy\",\"version\":1},\"userdoc\":{\"errors\":{\"InsufficientCollateral()\":[{\"notice\":\"Error thrown when the position has insufficient collateral\"}]},\"kind\":\"user\",\"methods\":{\"_isHealthy(address,address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Validates if a user's lending position is healthy\"}},\"notice\":\"A contract that validates the health status of lending positions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/hyperlane/IsHealthy.sol\":\"IsHealthy\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@arbitrum/=lib/chainlink-evm/contracts/node_modules/@arbitrum/nitro-contracts/src/\",\":@chainlink-ccip/=lib/chainlink-ccip/\",\":@chainlink-evm/=lib/chainlink/\",\":@eth-optimism/=lib/chainlink-evm/contracts/node_modules/@eth-optimism/contracts/\",\":@hyperlane-xyz/=lib/hyperlane-monorepo/solidity/contracts/\",\":@openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":@openzeppelin/=lib/chainlink-evm/contracts/node_modules/@openzeppelin/\",\":@scroll-tech/=lib/chainlink-evm/contracts/node_modules/@scroll-tech/contracts/\",\":@zksync/=lib/chainlink-evm/contracts/node_modules/@zksync/contracts/\",\":chainlink-ccip/=lib/chainlink-ccip/chains/evm/contracts/vendor/optimism/interop-lib/v0/src/\",\":chainlink-evm/=lib/chainlink-evm/\",\":chainlink/=lib/chainlink/\",\":ds-test/=lib/hyperlane-monorepo/solidity/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":hardhat/=lib/chainlink-evm/contracts/node_modules/hardhat/\",\":hyperlane-monorepo/=lib/hyperlane-monorepo/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"src/hyperlane/IsHealthy.sol\":{\"keccak256\":\"0x651cb75846ee49d19301c25bfe419a32b8a817aed9ffd3b5ffbd505a17a39a97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ca831788250791bbc617c2c234d17e6b66e035ef6a5d74056f9bc9673d53f01\",\"dweb:/ipfs/QmarpgdEUznLTVLAH1pMGrTqVrT3zg5FQKmBRfHndyRHRK\"]},\"src/hyperlane/interfaces/IFactory.sol\":{\"keccak256\":\"0x5d042c42c043492274862c2a17738262e553382445630e0298049434481dfd14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://541ca14c9294be0dd84f371f54aff3949fa258bc656bfe0abc03e422057ae53d\",\"dweb:/ipfs/QmTsRv1Hbo9XjZ5FHQzvR8pY3ZPgukzmfc6wTXFoCgSzfs\"]},\"src/hyperlane/interfaces/IPosition.sol\":{\"keccak256\":\"0x6e9f3604ea491538743ed4f3060463bc88b7677e75d62610da1beff7a6f26556\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f086799bf789fb09d892a004f30ae727a686eceb929cfece6b9ecec8812ea11f\",\"dweb:/ipfs/QmSz2MMHcEAqKw7GZzmWscH2ZyECkXt1jWux7g2QGfr83w\"]},\"src/hyperlane/interfaces/IPriceFeed.sol\":{\"keccak256\":\"0x879d29b6e57617bded5f44d468f61c73b75c38d92be41cb3c3828566ec1933a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5345d3171d9a071922de1a35541dd26d06bea3c67cd24f63673e8eb5f598cdb7\",\"dweb:/ipfs/QmWxA13ox3St1ehnPZCRFmUgLQZUhw2sTKUTMvAzsuGMGH\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"InsufficientCollateral"},{"inputs":[{"internalType":"address","name":"borrowToken","type":"address"},{"internalType":"address","name":"factory","type":"address"},{"internalType":"address","name":"addressPositions","type":"address"},{"internalType":"uint256","name":"ltv","type":"uint256"},{"internalType":"uint256","name":"totalBorrowAssets","type":"uint256"},{"internalType":"uint256","name":"totalBorrowShares","type":"uint256"},{"internalType":"uint256","name":"userBorrowShares","type":"uint256"}],"stateMutability":"view","type":"function","name":"_isHealthy"}],"devdoc":{"kind":"dev","methods":{"_isHealthy(address,address,address,uint256,uint256,uint256,uint256)":{"custom:revert":"InsufficientCollateral When the position is unhealthy","custom:security":"This function should be called before any borrow operations                  to ensure the position remains healthy after the operation","details":"This function performs a comprehensive health check by:      1. Fetching the current price of the borrowed token from Chainlink      2. Calculating the total collateral value from all user positions      3. Computing the actual borrowed amount in the borrowed token      4. Converting the borrowed amount to USD value      5. Comparing against collateral value and LTV limits","params":{"addressPositions":"The address of the positions contract","borrowToken":"The address of the token being borrowed","factory":"The address of the lending pool factory contract","ltv":"The loan-to-value ratio (in basis points, e.g., 8000 = 80%)","totalBorrowAssets":"The total amount of assets borrowed across all users","totalBorrowShares":"The total number of borrow shares across all users","userBorrowShares":"The number of borrow shares owned by the user"}}},"version":1},"userdoc":{"kind":"user","methods":{"_isHealthy(address,address,address,uint256,uint256,uint256,uint256)":{"notice":"Validates if a user's lending position is healthy"}},"version":1}},"settings":{"remappings":["@arbitrum/=lib/chainlink-evm/contracts/node_modules/@arbitrum/nitro-contracts/src/","@chainlink-ccip/=lib/chainlink-ccip/","@chainlink-evm/=lib/chainlink/","@eth-optimism/=lib/chainlink-evm/contracts/node_modules/@eth-optimism/contracts/","@hyperlane-xyz/=lib/hyperlane-monorepo/solidity/contracts/","@openzeppelin-contracts/=lib/openzeppelin-contracts/","@openzeppelin/=lib/chainlink-evm/contracts/node_modules/@openzeppelin/","@scroll-tech/=lib/chainlink-evm/contracts/node_modules/@scroll-tech/contracts/","@zksync/=lib/chainlink-evm/contracts/node_modules/@zksync/contracts/","chainlink-ccip/=lib/chainlink-ccip/chains/evm/contracts/vendor/optimism/interop-lib/v0/src/","chainlink-evm/=lib/chainlink-evm/","chainlink/=lib/chainlink/","ds-test/=lib/hyperlane-monorepo/solidity/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","hardhat/=lib/chainlink-evm/contracts/node_modules/hardhat/","hyperlane-monorepo/=lib/hyperlane-monorepo/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/hyperlane/IsHealthy.sol":"IsHealthy"},"evmVersion":"prague","libraries":{},"viaIR":true},"sources":{"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7","urls":["bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db","dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"keccak256":"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330","urls":["bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf","dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r"],"license":"MIT"},"src/hyperlane/IsHealthy.sol":{"keccak256":"0x651cb75846ee49d19301c25bfe419a32b8a817aed9ffd3b5ffbd505a17a39a97","urls":["bzz-raw://4ca831788250791bbc617c2c234d17e6b66e035ef6a5d74056f9bc9673d53f01","dweb:/ipfs/QmarpgdEUznLTVLAH1pMGrTqVrT3zg5FQKmBRfHndyRHRK"],"license":"MIT"},"src/hyperlane/interfaces/IFactory.sol":{"keccak256":"0x5d042c42c043492274862c2a17738262e553382445630e0298049434481dfd14","urls":["bzz-raw://541ca14c9294be0dd84f371f54aff3949fa258bc656bfe0abc03e422057ae53d","dweb:/ipfs/QmTsRv1Hbo9XjZ5FHQzvR8pY3ZPgukzmfc6wTXFoCgSzfs"],"license":"MIT"},"src/hyperlane/interfaces/IPosition.sol":{"keccak256":"0x6e9f3604ea491538743ed4f3060463bc88b7677e75d62610da1beff7a6f26556","urls":["bzz-raw://f086799bf789fb09d892a004f30ae727a686eceb929cfece6b9ecec8812ea11f","dweb:/ipfs/QmSz2MMHcEAqKw7GZzmWscH2ZyECkXt1jWux7g2QGfr83w"],"license":"MIT"},"src/hyperlane/interfaces/IPriceFeed.sol":{"keccak256":"0x879d29b6e57617bded5f44d468f61c73b75c38d92be41cb3c3828566ec1933a0","urls":["bzz-raw://5345d3171d9a071922de1a35541dd26d06bea3c67cd24f63673e8eb5f598cdb7","dweb:/ipfs/QmWxA13ox3St1ehnPZCRFmUgLQZUhw2sTKUTMvAzsuGMGH"],"license":"MIT"}},"version":1},"id":57}